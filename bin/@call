#!/usr/bin/env node
const clefairy = require("clefairy");
const readStdin = require("../lib/read-stdin");
const printHelp = require("../lib/print-help");
const parseArg = require("../lib/parse-arg");

clefairy.run(
  { help: clefairy.optionalBoolean, h: clefairy.optionalBoolean },
  async (options, ...args) => {
    if (options.help || options.h) {
      printHelp(
        "parse stdin as JSON, then call a method on the resulting object/array",
        `
          Reads stdin as JSON, then calls the method on it that has the name you pass as
          the first argument to @BINARY_NAME@, passing in any additional arguments you
          pass to @BINARY_NAME@ into the method.

          The resulting value, if any, is then printed to stdout.
        `,
        `
          echo '[1, [2], [[3, 4], 5]]' | @BINARY_NAME@ flat
          echo '[1, [2], [[3, 4], 5]]' | @BINARY_NAME@ flat 2
          echo '{}' | @BINARY_NAME@ toString
        `
      );
    }

    const methodName = args[0];
    if (!methodName) {
      throw new Error(
        "You must specify the name of the method to call as the first positional argument."
      );
    }

    const argsToGiveToMethod = args.slice(1).map(parseArg);

    const stdinStr = await readStdin();

    let value = stdinStr;
    try {
      value = JSON.parse(stdinStr);
    } catch (err) {
      // ignored
    }

    const result = value[methodName](...argsToGiveToMethod);

    if (result != null) {
      let output = result;
      if (typeof result !== "string") {
        output = JSON.stringify(result, null, 2) + "\n";
      }

      process.stdout.write(output);
    }
  }
);
